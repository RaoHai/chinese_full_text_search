#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.138                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS =  -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG =  $(INC)
CFLAGS_DEBUG =  $(CFLAGS) -g
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB) -lpthread
LDFLAGS_DEBUG =  $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/Chinese_Word_Seg

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS) -O2
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/Chinese_Word_Seg

OBJ_DEBUG = $(OBJDIR_DEBUG)/event.o $(OBJDIR_DEBUG)/except.o $(OBJDIR_DEBUG)/file_service_thread.o $(OBJDIR_DEBUG)/keyvalue.o $(OBJDIR_DEBUG)/cstlib.o $(OBJDIR_DEBUG)/lock_free_queue.o $(OBJDIR_DEBUG)/protocol.o $(OBJDIR_DEBUG)/simple_json.o $(OBJDIR_DEBUG)/trie-tree.o $(OBJDIR_DEBUG)/allocate.o $(OBJDIR_DEBUG)/cJSON.o $(OBJDIR_DEBUG)/Test.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/event.o $(OBJDIR_RELEASE)/except.o $(OBJDIR_RELEASE)/file_service_thread.o $(OBJDIR_RELEASE)/keyvalue.o $(OBJDIR_RELEASE)/cstlib.o $(OBJDIR_RELEASE)/lock_free_queue.o $(OBJDIR_RELEASE)/protocol.o $(OBJDIR_RELEASE)/simple_json.o $(OBJDIR_RELEASE)/trie-tree.o $(OBJDIR_RELEASE)/allocate.o $(OBJDIR_RELEASE)/cJSON.o $(OBJDIR_RELEASE)/Test.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/event.o: event.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c event.c -o $(OBJDIR_DEBUG)/event.o

$(OBJDIR_DEBUG)/except.o: except.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c except.c -o $(OBJDIR_DEBUG)/except.o

$(OBJDIR_DEBUG)/file_service_thread.o: file_service_thread.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c file_service_thread.c -o $(OBJDIR_DEBUG)/file_service_thread.o

$(OBJDIR_DEBUG)/keyvalue.o: keyvalue.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c keyvalue.c -o $(OBJDIR_DEBUG)/keyvalue.o

$(OBJDIR_DEBUG)/cstlib.o: cstlib.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c cstlib.c -o $(OBJDIR_DEBUG)/cstlib.o

$(OBJDIR_DEBUG)/lock_free_queue.o: lock_free_queue.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lock_free_queue.c -o $(OBJDIR_DEBUG)/lock_free_queue.o

$(OBJDIR_DEBUG)/protocol.o: protocol.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c protocol.c -o $(OBJDIR_DEBUG)/protocol.o

$(OBJDIR_DEBUG)/simple_json.o: simple_json.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c simple_json.c -o $(OBJDIR_DEBUG)/simple_json.o

$(OBJDIR_DEBUG)/trie-tree.o: trie-tree.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c trie-tree.c -o $(OBJDIR_DEBUG)/trie-tree.o

$(OBJDIR_DEBUG)/allocate.o: allocate.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c allocate.c -o $(OBJDIR_DEBUG)/allocate.o

$(OBJDIR_DEBUG)/cJSON.o: cJSON.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c cJSON.c -o $(OBJDIR_DEBUG)/cJSON.o

$(OBJDIR_DEBUG)/Test.o: Test.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Test.c -o $(OBJDIR_DEBUG)/Test.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/event.o: event.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c event.c -o $(OBJDIR_RELEASE)/event.o

$(OBJDIR_RELEASE)/except.o: except.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c except.c -o $(OBJDIR_RELEASE)/except.o

$(OBJDIR_RELEASE)/file_service_thread.o: file_service_thread.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c file_service_thread.c -o $(OBJDIR_RELEASE)/file_service_thread.o

$(OBJDIR_RELEASE)/keyvalue.o: keyvalue.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c keyvalue.c -o $(OBJDIR_RELEASE)/keyvalue.o

$(OBJDIR_RELEASE)/cstlib.o: cstlib.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cstlib.c -o $(OBJDIR_RELEASE)/cstlib.o

$(OBJDIR_RELEASE)/lock_free_queue.o: lock_free_queue.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lock_free_queue.c -o $(OBJDIR_RELEASE)/lock_free_queue.o

$(OBJDIR_RELEASE)/protocol.o: protocol.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c protocol.c -o $(OBJDIR_RELEASE)/protocol.o

$(OBJDIR_RELEASE)/simple_json.o: simple_json.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c simple_json.c -o $(OBJDIR_RELEASE)/simple_json.o

$(OBJDIR_RELEASE)/trie-tree.o: trie-tree.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c trie-tree.c -o $(OBJDIR_RELEASE)/trie-tree.o

$(OBJDIR_RELEASE)/allocate.o: allocate.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c allocate.c -o $(OBJDIR_RELEASE)/allocate.o

$(OBJDIR_RELEASE)/cJSON.o: cJSON.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cJSON.c -o $(OBJDIR_RELEASE)/cJSON.o

$(OBJDIR_RELEASE)/Test.o: Test.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Test.c -o $(OBJDIR_RELEASE)/Test.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

